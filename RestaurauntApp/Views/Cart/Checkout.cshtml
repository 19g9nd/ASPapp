@{
    ViewData["Title"] = "Checkout";
}
<style>
    form {
        max-width: 500px;
        margin: 0 auto;
        padding: 20px;
        background-color: white;
        border: 1px solid #ddd;
        border-radius: 5px;
        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.2);
    }

    .form-group {
        margin-bottom: 15px;
    }

    label {
        display: block;
        margin-bottom: 5px;
        color: #333;
    }

    input[type="text"],
    input[type="email"],
    input[type="tel"],
    input[type="datetime-local"] {
        width: calc(100% - 22px);
        padding: 10px;
        border: 1px solid #ccc;
        border-radius: 5px;
        font-size: 16px;
    }

    button.btn_checkout {
        width: 100%;
        background-color: #EA4C89;
        border: 2px solid #111;
        border-radius: 8px;
        color: #ffffff;
        cursor: pointer;
        font-size: 16px;
        padding: 10px 0;
        transition: background-color 0.3s ease;
    }

    button.btn_checkout:hover {
        background-color: #ff4081;
    }
</style>

<body class="main-container">

    <h1 style="margin: 0 auto; padding: 10px; text-align: center;">@ViewData["Title"]</h1>
    <form asp-action="Checkout" method="post">
        <div class="form-group">
            <label for="firstName">First Name:</label>
            <input type="text" id="firstName" name="firstName" required>
        </div>
        <div class="form-group">
            <label for="lastName">Last Name:</label>
            <input type="text" id="lastName" name="lastName" required>
        </div>
        <div class="form-group">
            <label for="email">Email:</label>
            <input type="email" id="email" name="email" required>
        </div>
        <div class="form-group">
            <label for="phone">Phone:</label>
            <input type="tel" id="phone" name="phone" required>
        </div>
        <div class="form-group">
            <label for="pickupTime">Pick-up Time:</label>
            <input type="datetime-local" id="pickupTime" name="pickupTime" required>
        </div>
        <div class="form-group">
            <label for="cardNumber">Card Number:</label>
            <input type="text" id="cardNumber" name="cardNumber" maxlength="19"
                pattern="[0-9]{4}\s?[0-9]{4}\s?[0-9]{4}\s?[0-9]{4}" title="Please enter a valid credit card number"
                required>
        </div>

        <div class="form-group">
            <label for="cvv">CVV:</label>
            <input type="text" id="cvv" name="cvv" required>
        </div>
        <div class="form-group">
            <label for="expiry">Expiry:</label>
            <input type="text" id="expiry" name="expiry" required>
        </div>

        <button type="button" onclick="submitFormAndCreateOrder()" class="btn_checkout">Place Order</button>
    </form>

</body>

<script type="text/javascript">
    async function submitFormAndCreateOrder() {
        await createOrderFromCart();
        document.querySelector('form').submit();
    }

    function clearCart() {
        localStorage.removeItem('cartItems');
    }

    function createOrderFromCart() {
        let cartItems = JSON.parse(localStorage.getItem('cartItems')) || [];

        cartItems.forEach(cartItem => {
            let orderItemDTO = {
                MenuItemId: cartItem.id,
                Quantity: cartItem.quantity,
                Name: cartItem.name,
                Price: cartItem.price
            };

            fetch('/Cart/AddToOrder', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(orderItemDTO)
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Fail adding item to order');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                });
        });

        clearCart();
    }
    document.getElementById('cardNumber').addEventListener('input', function (e) {
        let trimmedValue = e.target.value.replace(/\s+/g, ''); // Удаление всех пробелов из введенного значения
        let formattedValue = '';
        for (let i = 0; i < trimmedValue.length; i++) {
            if (i > 0 && i % 4 === 0) {
                formattedValue += ' '; // Добавление пробела после каждых четырех цифр
            }
            formattedValue += trimmedValue[i];
        }
        e.target.value = formattedValue.trim();
    });

</script>

</html>
