@model RestaurauntApp.Models.Order

@{
    ViewData["Title"] = "Cart";
}

<style>
    /* Стили для основного контейнера */
    .main-container {
        background-color: #f2f2f2;
        color: #333;
        margin: 0;
        padding: 0;
        max-height: fit-content;
    }

    /* Стили для заголовка страницы */
    h2 {
        text-align: center;
        padding: 20px;
        color: #ff4081;
        font-size: 28px;
    }

    /* Стили для сообщения о пустой корзине */
    .empty-cart-message {
        font-style: italic;
        color: #777;
        text-align: center;
    }

    /* Стили для таблицы */
    .table {
        width: 100%;
        border-collapse: collapse;
        background-color: #fff;
        margin-bottom: 20px;
    }

    .table th,
    .table td {
        border: 1px solid #ddd;
        padding: 8px;
        text-align: left;
    }

    .table th {
        background-color: #f2f2f2;
    }

    /* Стили для строки с итемами корзины */
    .cart-item-row {
        border-bottom: 1px solid #ddd;
    }

    /* Стили для общей цены */
    .total-price {
        text-align: right;
        font-weight: bold;
        margin-right: 20px;
        color: #f90099;
    }

    .button-wrapper {
        display: inline-block;
        width: 48px;
        height: 30px;
        margin-right: 5px;
    }

    .remove_cmpl_btn {
        display: inline-block;
        width: 48px;
        height: 30px;
        background: url('/Assets/delete-64.ico') no-repeat;
        background-size: 60%;
    }

    .remove_btn {
        display: inline-block;
        width: 48px;
        height: 30px;
        background: url('/Assets/minus-7-64.ico') no-repeat;
        background-size: 70%;
    }

    .add_btn {
        display: inline-block;
        width: 48px;
        height: 30px;
        background: url('/Assets/plus-64.ico') no-repeat;
        background-size: 60%;
    }
</style>

<body class="main-container">
    <h2>Cart</h2>

    @if (Model != null && Model.OrderItems.Any())
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Item Name</th>
                    <th>Quantity</th>
                    <th>Price</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.OrderItems)
                {
                    <tr class="cart-item-row">
                        <td>@item.Name</td>
                        <td>@item.Quantity</td>
                        <td>@(item.Price * item.Quantity)</td>
                        <td> <!-- Новый столбец для кнопок удаления -->

                            <div class="button-wrapper">
                                <span class="remove_cmpl_btn" onclick="removeItem('@item.Id')"></span>
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>

        <p class="total-price">Total Price: @Model.TotalPrice</p>
    }
    else
    {
        <p class="empty-cart-message">No items in the cart yet.</p>
    }
</body>


<script>
    async function removeItem(itemId) {
        if (confirm('Are you sure you want to delete this item?')) {
            try {
                const response = await fetch(`/Cart/RemoveItem?itemId=${itemId}`, {
                    method: 'DELETE'
                });

                if (!response.ok) {
                    throw new Error('Failed to remove item from cart.');
                }
                window.location.reload();
            } catch (error) {
                console.error('Error:', error);
            }
        }
    }
</script>
